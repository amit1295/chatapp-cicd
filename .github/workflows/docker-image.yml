name: Deploy to EKS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1 # update to your region
  ECR_REPOSITORY: chatapp # update to your ECR repository name
  K8S_NAMESPACE: default
  K8S_DEPLOYMENT_NAME: chatapp-deployment # update to your Kubernetes deployment name

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Set up Kubeconfig
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.29' # update to your Kubernetes version

    - name: Install and configure AWS for Kubernetes
      run: |
        curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-09-18/bin/linux/amd64/aws-iam-authenticator
        chmod +x ./aws-iam-authenticator
        mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
        echo 'AWS_K8S_VERSION="1.18"' >> $GITHUB_ENV
        aws eks update-kubeconfig --region $AWS_REGION --name my-cluster # update to your cluster name

    - name: Deploy to EKS
      run: |
        kubectl set image deployment/$K8S_DEPLOYMENT_NAME my-container=${{ steps.build-image.outputs.image }} --namespace $K8S_NAMESPACE
        kubectl rollout status deployment/$K8S_DEPLOYMENT_NAME --namespace $K8S_NAMESPACE
